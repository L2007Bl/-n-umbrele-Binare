#░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀╕╣╖╢
import pyautogui
import keyboard
import time
import os
#def get_valid_number():
#	try:
#		input_number = int(input('=> '))
#		return input_number
#	except ValueError:
#		pass
#	except KeyboardInterrupt:
#		pass
def Main():
	print('╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗')
	print('║ ██╗███╗   ██╗    ██╗   ██╗███╗   ███╗██████╗ ██████╗ ███████╗██╗     ███████╗    ██████╗ ██╗███╗   ██╗ █████╗ ██████╗ ███████╗                           ║')
	print('║ ██║████╗  ██║    ██║   ██║████╗ ████║██╔══██╗██╔══██╗██╔════╝██║     ██╔════╝    ██╔══██╗██║████╗  ██║██╔══██╗██╔══██╗██╔════╝██╗                        ║')
	print('║ ██║██╔██╗ ██║    ██║   ██║██╔████╔██║██████╔╝██████╔╝█████╗  ██║     █████╗      ██████╔╝██║██╔██╗ ██║███████║██████╔╝█████╗  ╚═╝                        ║')
	print('║ ██║██║╚██╗██║    ██║   ██║██║╚██╔╝██║██╔══██╗██╔══██╗██╔══╝  ██║     ██╔══╝      ██╔══██╗██║██║╚██╗██║██╔══██║██╔══██╗██╔══╝  ██╗                        ║')
	print('║ ██║██║ ╚████║    ╚██████╔╝██║ ╚═╝ ██║██████╔╝██║  ██║███████╗███████╗███████╗    ██████╔╝██║██║ ╚████║██║  ██║██║  ██║███████╗╚═╝                        ║')
	print('║ ╚═╝╚═╝  ╚═══╝     ╚═════╝ ╚═╝     ╚═╝╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝    ╚═════╝ ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝                           ║')
	print('║                                                                                                                                                          ║')
	print('║ ███████╗███╗   ██╗██╗ ██████╗ ███╗   ███╗ █████╗      ██████╗ █████╗ ███████╗███████╗██╗    ██████╗  █████╗ ██████╗  █████╗ ███████╗██╗████████╗███████╗ ║')
	print('║ ██╔════╝████╗  ██║██║██╔════╝ ████╗ ████║██╔══██╗    ██╔════╝██╔══██╗██╔════╝██╔════╝██║    ██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔════╝██║╚══██╔══╝██╔════╝ ║')
	print('║ █████╗  ██╔██╗ ██║██║██║  ███╗██╔████╔██║███████║    ██║     ███████║███████╗█████╗  ██║    ██████╔╝███████║██████╔╝███████║███████╗██║   ██║   █████╗   ║')
	print('║ ██╔══╝  ██║╚██╗██║██║██║   ██║██║╚██╔╝██║██╔══██║    ██║     ██╔══██║╚════██║██╔══╝  ██║    ██╔═══╝ ██╔══██║██╔══██╗██╔══██║╚════██║██║   ██║   ██╔══╝   ║')
	print('║ ███████╗██║ ╚████║██║╚██████╔╝██║ ╚═╝ ██║██║  ██║    ╚██████╗██║  ██║███████║███████╗██║    ██║     ██║  ██║██║  ██║██║  ██║███████║██║   ██║   ███████╗ ║')
	print('║ ╚══════╝╚═╝  ╚═══╝╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝     ╚═════╝╚═╝  ╚═╝╚══════╝╚══════╝╚═╝    ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝   ╚═╝   ╚══════╝ ║')
	print('╠══════════╦═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝')
	print('║ 1. Start ║')
	print('╟──────────╢')
	print('║ 2. Exit  ║')
	print('╚══════════╝')
pyautogui.hotkey('alt', 'enter')
marimea = True
game = True
scene = 1
player_pos = [1, 1]
while game:
	if scene == 1:
		os.system('cls')
		Main()
		while True:
			if keyboard.is_pressed('1'):
				scene = 2
				break
			elif keyboard.is_pressed('2'):
				exit()
				break	
	elif scene == 2:
		os.system('cls')
		if marimea:
			pyautogui.keyDown('ctrl')
			pyautogui.scroll(1)
			pyautogui.scroll(1)
			pyautogui.scroll(1)
			pyautogui.scroll(1)
			pyautogui.scroll(1)
			pyautogui.scroll(1)
			pyautogui.scroll(1)
			pyautogui.keyUp('ctrl')
			marimea = False
		obstacle = '█'
		map_data = [
			['█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', 'H', '.', '.', '.', '.', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'H', '.', '.', '.', '█', '.', '.', '.', '.', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '█', '█', '█', '█', '█'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['H', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', 'H', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '█', '.', '.', '.', '█', '.', '.', '.', '.', '.'],
			['█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '.', '.', '.', '.', '.']
		]
		for i in range(22):
			for j in range(21):
				if [j, i] == player_pos:
					print('☻ ', end='')
				elif map_data[i][j] == '█':
					print('██', end='')
				elif map_data[i][j] == 'H':
					print('HH', end='')
				else:
					print(map_data[i][j], end=' ')
			print()
		print('\n(w,a,s,d)=Miscarea personajului')
		print('(esc)=Iesire din joc')
		new_pos = player_pos.copy()
		time.sleep(0.25)
		while True:
			if keyboard.is_pressed('w'):
				new_pos[1] -= 1
				break
			elif keyboard.is_pressed('a'):
				new_pos[0] -= 1
				break
			elif keyboard.is_pressed('s'):
				new_pos[1] += 1
				break
			elif keyboard.is_pressed('d'):
				new_pos[0] += 1
				break
			elif keyboard.is_pressed('esc'):
				exit()
				break
		if 0 <= new_pos[0] < 21 and 0 <= new_pos[1] < 22 and map_data[new_pos[1]][new_pos[0]] != '█':
			player_pos = new_pos